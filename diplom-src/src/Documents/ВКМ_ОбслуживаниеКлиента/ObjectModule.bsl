
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если НЕ ЭтоНовый() Тогда
		
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
		               |	ВКМ_ОбслуживаниеКлиента.Номер КАК Номер,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист КАК Специалист,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяНачалаРабот КАК ВремяНачалаРабот,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяОкончанияРабот КАК ВремяОкончанияРабот
		               |ИЗ
		               |	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		               |ГДЕ
		               |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
				
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот Тогда 
			НоваяДата = ВКМ_ДатаПроведенияРабот;
			ШаблонДата = "дата начала" + " " + Формат(НоваяДата, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		
		Если Выборка.ВремяНачалаРабот <> ВКМ_ВремяНачалаРабот Тогда 
			НовоеВремяНачала = ВКМ_ВремяНачалаРабот;
			ШаблонВремяНачало = "время начала" + " " + Формат(НовоеВремяНачала, "ДФ=HH:mm");
		КонецЕсли;
		
		Если Выборка.ВремяОкончанияРабот <> ВКМ_ВремяОкончанияРабот Тогда 
			НовоеВремяОкончания = ВКМ_ВремяОкончанияРабот;
			ШаблонВремяОкончание = "время окончания" + " " + Формат(НовоеВремяОкончания, "ДФ=HH:mm");
		КонецЕсли;
		
		Если Выборка.Специалист <> ВКМ_Специалист Тогда 
			НовыйИсполнитель = ВКМ_Специалист;
			ШаблонИсполнитель = "исполнитель" + " " + НовыйИсполнитель;
		КонецЕсли;
		
		ОбъектУведомлениеТГ = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ШаблонНаименование = "По документу № %1";
		ОбъектУведомлениеТГ.Наименование = СтрШаблон(ШаблонНаименование, Номер);
		ШаблонСообщения = "Внесены изменения: %2 %3 %4 %5";
		ОбъектУведомлениеТГ.Текст = СтрШаблон(ШаблонСообщения, ШаблонДата, ШаблонВремяНачало, ШаблонВремяОкончание,ШаблонИсполнитель);
		
		ОбъектУведомлениеТГ.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
	АбонентскоеОбслуживание = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Владелец КАК Клиент,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ДатаНачала,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ДатаОкончания,
		|	ЕСТЬNULL(ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты, 0) КАК Абонентка,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК Почасовуха,
		|	ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка.ВКМ_Специалист КАК Специалист,
		|	ВКМ_УсловияОплатыСотрудников.ПроцентОтРабот КАК Процент,
		|	ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.ВКМ_ФактическиПотраченоЧасов КАК ЧасФакт,
		|	ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту КАК ЧасОплата
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента.ВКМ_ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы
		|		ПО ДоговорыКонтрагентов.Владелец = ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка.ВКМ_Клиент
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
		|		ПО (ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка.ВКМ_Специалист = ВКМ_УсловияОплатыСотрудников.Сотрудник)
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка.ВКМ_Специалист = &Специалист
		|	И ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Специалист", ВКМ_Специалист);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Запрос.Выполнить().Пустой() Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не достаточно данных (Специалист, договор)");
		
		Отказ = Истина;
		Возврат
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если АбонентскоеОбслуживание = Выборка.ВидДоговора 
			И Выборка.ДатаНачала < ВКМ_ДатаПроведенияРабот
			И Выборка.ДатаОкончания > ВКМ_ДатаПроведенияРабот			
			
		Тогда 
			
			//Регистр ВыполненныеРаботыКлиенту
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.ВКМ_Клиент = Выборка.Клиент;
			Движение.ВКМ_Договор = Выборка.Договор;
			Движение.КоличествоЧасов = Выборка.ЧасОплата;
			Движение.СуммаКОплате = Выборка.Почасовуха * Выборка.ЧасОплата;
						
			// регистр ВКМ_ВыполненныеСотрудникомРаботы
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.ВКМ_Сотрудник = ВКМ_Специалист;
			Движение.ЧасовКОплате = Выборка.ЧасФакт;
			Движение.СуммаКОплате = Выборка.ЧасОплата * Выборка.Почасовуха * Выборка.Процент / 100 ;
						
		Иначе 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата выполнения работ не соотвествует договору");
			Отказ = Истина;
			
		КонецЕсли;
		
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
